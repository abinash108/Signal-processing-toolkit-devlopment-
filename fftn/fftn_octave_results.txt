// this file is generated using octave ------function used is fftn from signal package
 B = fftn (A) Â¶
:B = fftn (A, size) Â¶
Compute the N-dimensional discrete Fourier transform of A using a Fast Fourier Transform (FFT) algorithm. 
The optional vector argument size may be used specify the dimensions of the array to be used.
 If an element of size is smaller than the corresponding dimension of A, 
then the dimension of A is truncated prior to performing the FFT. Otherwise,
 if an element of size is larger than the corresponding dimension then A is resized and padded with zero


//  -----------------------------------------------------------test case 1-------------------------------------------------------------------------------
>> fftn([3 7 5;0 1 7;9 5 4])
ans =

   41.0000 +       0i   -2.5000 +  2.5981i   -2.5000 -  2.5981i
    2.0000 +  8.6603i    2.0000 +  3.4641i   -8.5000 + 11.2583i
    2.0000 -  8.6603i   -8.5000 - 11.2583i    2.0000 -  3.4641i

//  -----------------------------------------------------------test case 2-------------------------------------------------------------------------------
>> fftn([100 278;334 985])
ans =

   1697   -829
   -941    473

//  -----------------------------------------------------------test case 3-------------------------------------------------------------------------------
>> fftn([2:5;8 7 5 1;7 3 4 5;0 0 1 6],[2 2])
ans =

   20    0
  -10   -2
//  -----------------------------------------------------------test case 3.5-------------------------------------------------------------------------------
>> fftn([2:5;8 7 5 1;7 3 4 5;0 0 1 6],[2])
error: fftn: SIZE must be a vector of length dim




//  -----------------------------------------------------------test case 4-------------------------------------------------------------------------------


>> a=[i 2+3i 2+pi;pi i+2 pi+i;1 5+2i pi+10i]
a =

         0 +  1.0000i    2.0000 +  3.0000i    5.1416 +       0i
    3.1416 +       0i    2.0000 +  1.0000i    3.1416 +  1.0000i
    1.0000 +       0i    5.0000 +  2.0000i    3.1416 + 10.0000i

>> fftn(a,[ 2 2])
ans =

   7.1416 + 5.0000i  -0.8584 - 3.0000i
  -3.1416 + 3.0000i  -3.1416 - 1.0000i



//  -----------------------------------------------------------test case 5-------------------------------------------------------------------------------
a=[2 8 9; i pi pi+i;2+3i 0.56+0.2i 0.3333+2i];a(:,:,2)=[1:3;i i i;pi pi pi]
a =

ans(:,:,1) =

   2.0000 +      0i   8.0000 +      0i   9.0000 +      0i
        0 + 1.0000i   3.1416 +      0i   3.1416 + 1.0000i
   2.0000 + 3.0000i   0.5600 + 0.2000i   0.3333 + 2.0000i

ans(:,:,2) =

   1.0000 +      0i   2.0000 +      0i   3.0000 +      0i
        0 + 1.0000i        0 + 1.0000i        0 + 1.0000i
   3.1416 +      0i   3.1416 +      0i   3.1416 +      0i

>> fftn(a,[2 2 1])
ans =

   13.1416 +  1.0000i   -9.1416 +  1.0000i
    6.8584 -  1.0000i   -2.8584 -  1.0000i



//  -----------------------------------------------------------test case 5.5-------------------------------------------------------------------------------
>> fftn(a,[2 2 2])
ans =

ans(:,:,1) =

   16.1416 +  3.0000i  -10.1416 +  1.0000i
    9.8584 -  3.0000i   -3.8584 -  1.0000i

ans(:,:,2) =

   10.1416 -  1.0000i   -8.1416 +  1.0000i
    3.8584 +  1.0000i   -1.8584 -  1.0000i


-------------------------------------------------------------------------------------------------------------------------------------------------------------------